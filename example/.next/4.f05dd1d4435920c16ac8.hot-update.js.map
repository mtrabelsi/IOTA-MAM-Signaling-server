{"version":3,"file":"4.f05dd1d4435920c16ac8.hot-update.js","sources":["webpack:///components/head.js","webpack:///./node_modules/next/head.js","webpack:///pages/pub.js"],"sourcesContent":["import Head from 'next/head'\nexport default () => (\n  <div>\n    <Head>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <meta charSet=\"utf-8\" />\n      <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.1/css/bulma.min.css\" />\n      <script defer src=\"https://use.fontawesome.com/releases/v5.1.0/js/all.js\"></script>\n    </Head>\n    <style jsx global>{`\n      body {\n        color: #fff;\n      }\n    `}</style>\n  </div>\n)\n\n\n\n// WEBPACK FOOTER //\n// components/head.js","module.exports = require('./dist/lib/head')\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/next/head.js\n// module id = ./node_modules/next/head.js\n// module chunks = 4","\nimport Mam from 'mam.client.js'\nimport IOTA from 'iota.lib.js'\nimport io from 'socket.io-client'\nimport config from './../../config'\nimport Head from '../components/head'\n\nconst iota = new IOTA({ provider: config.provider })\n\nconst socket = io(config.signalingServer);\n\n// Initialise MAM State\nlet mamState = Mam.init(iota)\n\n// Set channel mode\nmamState = Mam.changeMode(\n     mamState,\n     config.mode,\n     config.sideKey\n)\n\n// Publish to tangle\nconst publish = async packet => {\n    // Create MAM Payload - STRING OF TRYTES\n    const message = Mam.create(mamState, packet)\n    // Save new mamState\n    mamState = message.state\n    console.log('Root: ', message.root)\n    console.log('Address: ', message.address)\n\n    //$(\".loading\").html(`<b>Root: </b>${message.root}</br><b>Address: </b>${message.address}`);\n    // sending to the subs my root address\n    socket.emit('mam.channel.info', {\n        root: message.root,\n        address: message.address\n    });\n    // Attach the payload.\n    await Mam.attach(message.payload, message.address)\n    // notifying the subs that the message has been published\n    socket.emit('mam.channel.ready', {});\n}\n/*\n$(\"a.button\").click(function() {\n  const payload = $('.payload').val();\n  publish(payload)\n});\n */\nexport default () =>\n  <div>\n    <Head />\n    <section className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Demo MAM publisher</h1>\n      </div>\n    </section>\n    <section className=\"section\">\n      <div className=\"container\">\n        <div className=\"notification is-warning\">\n          <button className=\"delete\"></button>\n          <span className=\"loading\"><a className=\"button is-info is-loading\">Loading</a></span>\n        </div>\n        <div className=\"field\">\n          <div className=\"control\">\n            <input className=\"input is-large payload\" type=\"text\" placeholder=\"Enter Tryte-encoded String here\" />\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"control\">\n            <a className=\"button is-success is-large\">Publish</a>\n          </div>\n        </div>\n      </div>\n    </section>\n    <style jsx>{`\n      @media (max-width: 600px) {\n        div {\n          background: blue;\n        }\n      }\n    `}</style>\n  </div>\n\n\n\n// WEBPACK FOOTER //\n// pages/pub.js"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AADA;;;;;;;ACDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAXA;AAAA;AACA;AADA;AAgBA;AACA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAmBA;;;;;;;;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AAAA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}